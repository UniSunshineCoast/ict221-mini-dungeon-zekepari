plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.11"
}

group = 'ict221'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

application {
    mainClass = 'dungeon.gui.RunGame'
}

javafx {
    version = '21.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }
    }
}

sourceSets.main {
    java {
        srcDir 'src/main/java'
    }
    resources {
        // we also look for resources (like *.fxml) in src/main/java
        srcDirs = ['src/main/java', 'src/main/resources']
        exclude "**/*.java"
    }
}

// JaCoCo test coverage configuration
test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'dungeon/gui/**'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                'dungeon/gui/**'
            ])
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}